@model Payer.Models.Transaction

<h1>TAX INVOICE</h1>
<header class="main-header">
    <nav class="navbar navbar-static-top">
        <a href="#" class="sidebar-toggle" uiactions="collapse" hidden></a>
    </nav>
</header>

<aside class="main-sidebar" uiactions="collapse" style="background-color:#e6e9eb; width:240px;">

    <section class="sidebar" hidden></section>
</aside>

<div style="float:left">
    <label style="margin-right:20px">Enter Phone Number:</label>
    <input type="tel" pattern="[0]{1}[5]{1}[0-9]{1}[0-9]{7}" placeholder="05xxxxxxxx" id="customerPhone" rows="1" maxlength="10" name="phone" style="width:150px;" onchange="IsNumberValid()" required />


</div>




<table class="table table-bordered" id="table" style="text-align: left;">

    <thead>

        <tr>
            <th scope="col">Checks</th>
            <th scope="col">#</th>
            <th scope="col">Particulars</th>
            <th scope="col">Amount</th>



        </tr>

    </thead>
    <tbody>


        @for (int i = 0; i < @Model.TransactionItems.Count; i++)
        {

            var transactionItem = @Model.TransactionItems[i];

<tr onchange="checkedIteeemm(this)">

    <td><input id="checkedItem" type="checkbox" disabled></td>
    <td id="index">@(1 + i)</td>
    <td>@transactionItem.Item.Name</td>
    <td id="price">@transactionItem.Item.Price</td>

</tr>}

    </tbody>
</table>


<script type="text/javascript">
        var transactionItems = [];
        var count = 0;
        var wait = 0;

         // Refreshing items table for synchronization between customers.
        $(document).ready(function () {


            function refresh() {
                var div = $('#table'),
                    divHtml = div.html();

            }

            setInterval(function () {

                toUpdateModel();
                refresh();
                var tempAmount = 0;

                for (var i = 0; i < transactionItems.length; i++)
                {

                    if (transactionItems[i].CustomerId != null) {

                        if (transactionItems[i].CustomerId == "0" + document.getElementById("customerPhone").value)
                        {
                            tempAmount += parseInt(document.getElementById("table").rows[i+1].cells[3].innerHTML);
                        }
                    }
                }

                totAmount = tempAmount;
                document.getElementById("amountArea").value = tempAmount.toString();
                    telNum();


        }, 100); 

        })

        //Checking validation of entered phone number to become the customer's Id to unlock items table and other fields.
        var statPhone;
        var flagg;
        var firstIsValid;
        function IsNumberValid() {
            toUpdateModel();
            var flag = 0;
            if (statPhone != null) {
                document.getElementById("amountArea").value = 0;
                totAmount = 0;

            }

            for (var i = 0; i < transactionItems.length; i++) {
                document.getElementById("table").getElementsByTagName('input')[i].disabled = true;
                document.getElementById("payy").disabled = true;
                document.getElementById("tipArea").disabled = true;
            }

            var number = document.getElementById("customerPhone").value;

            if (number[0] != '0' || number[1] != '5' || number.length < 10) {
                alert("Enter a valid phone number in this format: 05xxxxxxxx");
                flag = 1;
            }
            else {
                for (var i = 2; i < number.length; i++)
                    if (number[i] < '0' || number[i] > '9') {
                        alert("Enter a valid phone number in this format: 05xxxxxxxx");
                        flag = 1;
                    }
            }

            if (flag == 0) {
                document.getElementById("payy").removeAttribute('disabled');
                document.getElementById("tipArea").removeAttribute('disabled');
                firstIsValid = 0;
                telNum();

            }

        }
         // Updating items table by retrieving data from the data base.
        function toUpdateModel() {

            var data;
            var trId = @Model.Id;
            $(document).ready(function () {
                data = JSON.parse(
                    $.ajax({
                        url: Q.resolveUrl('~/Default/Transactions/UpdateTable?TranId=' + trId),
                    async: false,
                        success: function (res) {
                            transactionItems = (JSON.parse(res)).TransactionItems;
                        }
                }).responseText);

            });


        }
            //By entering valid phone number,we update table checkBoxes according to the items that related to the specefic customer
            function telNum() {

                var vall = document.getElementById("table").getElementsByTagName('input').length;
                var PhoneNum = document.getElementById("customerPhone").value;

                for (var i = 0; i < transactionItems.length; i++) {

                    if (transactionItems[i].CustomerId == null) {

                        if (PhoneNum != "")
                            document.getElementById("table").getElementsByTagName('input')[i].removeAttribute("disabled");

                        document.getElementById("table").getElementsByTagName('input')[i].checked = false;
                    }
                    else if ("0" + transactionItems[i].CustomerId == PhoneNum) {

                        document.getElementById("table").getElementsByTagName('input')[i].removeAttribute("disabled");
                        document.getElementById("table").getElementsByTagName('input')[i].checked = true;
                        if (firstIsValid < transactionItems.length) {
                            var amount = document.getElementById("amountArea").value;
                            var price = document.getElementById("table").rows[i + 1].cells[3].innerHTML;
                            document.getElementById("amountArea").value = (parseInt(amount) + parseInt(price)).toString();
                            totAmount += parseInt(price);


                        }
                    }
                    else {
                        document.getElementById("table").getElementsByTagName('input')[i].checked = true;
                        document.getElementById("table").getElementsByTagName('input')[i].disabled = true;

                    }
                    firstIsValid++;
                }

                statPhone = PhoneNum;
            }
        
    var totAmount = 0;
        //Updating database when one of the items checked or un checked
        function checkedIteeemm(x) {
            var r = x.rowIndex;
            var vall = document.getElementById("table").getElementsByTagName('input')[r-1].checked == true;
            var amount = document.getElementById("amountArea").value;
            var price = document.getElementById("table").rows[r].cells[3].innerHTML;
            var nameOfItem = document.getElementById("table").rows[r].cells[2].innerHTML;
            if (vall) {
                totAmount += parseInt(price);
                flagg = 1;
                document.getElementById("table").getElementsByTagName('input')[r - 1].checked = true;


               transactionItems[r-1].CustomerId = parseInt(statPhone);
            }
            else{

                totAmount -= parseInt(price);
                flagg = 0;

                transactionItems[r - 1].CustomerId = null;
                document.getElementById("table").getElementsByTagName('input')[r - 1].checked = false;

            }
            var tranItemId = transactionItems[r - 1].Id;

            $.ajax({
                url: "/Default/Transactions/CheckNewItem",
                type: 'post',
                data: { 'Phone': statPhone, 'ItemName': nameOfItem, 'TranId': @Model.Id , 'Flag': flagg, 'TranItemId': tranItemId},
                cache: false,
                success: function (response) {
                },
                error: function (response) {
                    alert("Error");
                },

            });

        
        }
        //Transfering customer to the payment page in order to complete the payment process
        function toPayButton() {
            $.ajax({
                url: "/Default/Transactions/PayButton",
                type: 'post',
                data: {
                    Tip: document.getElementById("tipArea").value,
                    WaiterForTip: @Model.WaiterId,
      
                },
                success: function (response) {
                    

                        window.location.href = "/Default/Transactions/PayButton?Phone=" + statPhone + "&CustomerAmount=" + parseInt(document.getElementById("amountArea").value);
                    },
                    error: function (response) {
                        alert("Error");
                    },


                });
            }


        var statTip = 0;
        function addTip() {
            var tip = document.getElementById("tipArea").value;
            var amount = document.getElementById("amountArea").value;

            if (tip != "") {
                document.getElementById("amountArea").value = (parseInt(totAmount) + parseInt(tip)).toString();
                statTip = parseInt(tip);
            }
            else {
                document.getElementById("amountArea").value = (parseInt(amount) - parseInt(statTip)).toString();
            }
        }
</script>

<label style="margin-right:20px; margin-left:63px">Tip:</label>
<input type="number" min="0" id="tipArea" rows="1" name="tipAre" style="width:80px;margin-right:65px;margin-bottom:10px" value="0" onchange="addTip()" disabled />

<form method="post">
    <label style="margin-right:20px">Total Amount:</label>
    <input type="text" id="amountArea" rows="1" name="amountAre" style="width:80px" disabled value="0" />

    <input type="button" class="btn btn-primary btn-sm" id="payy" value="Pay" style="margin-left:20px" onclick="toPayButton()" disabled />
</form>
